$date
	Mon Mar 15 21:43:10 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module micpu $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 1 & s_stack $end
$var wire 1 ' s_inm $end
$var wire 1 ( s_inc $end
$var wire 1 ) push $end
$var wire 1 * pop $end
$var wire 6 + opcode [5:0] $end
$var wire 3 , op_alu [2:0] $end
$scope module camino_datos $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 10 - salida_sumador [9:0] $end
$var wire 10 . salida_pila [9:0] $end
$var wire 10 / salida_mux_stack [9:0] $end
$var wire 8 0 salida_mux_inm [7:0] $end
$var wire 10 1 salida_mux_inc [9:0] $end
$var wire 16 2 salida_memoria_programa [15:0] $end
$var wire 10 3 salida_contador_programa [9:0] $end
$var wire 8 4 salida_alu [7:0] $end
$var wire 1 & s_stack $end
$var wire 1 ' s_inm $end
$var wire 1 ( s_inc $end
$var wire 8 5 rd2 [7:0] $end
$var wire 8 6 rd1 [7:0] $end
$var wire 1 ) pushsignal $end
$var wire 1 * popsignal $end
$var wire 6 7 opcode [5:0] $end
$var wire 3 8 op_alu [2:0] $end
$var wire 1 9 entrada_ffz $end
$scope module banco_registros $end
$var wire 1 ! clk $end
$var wire 4 : ra1 [3:0] $end
$var wire 4 ; ra2 [3:0] $end
$var wire 4 < wa3 [3:0] $end
$var wire 1 % we3 $end
$var wire 8 = wd3 [7:0] $end
$var wire 8 > rd2 [7:0] $end
$var wire 8 ? rd1 [7:0] $end
$upscope $end
$scope module contador_programa $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 10 @ d [9:0] $end
$var reg 10 A q [9:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 9 d $end
$var wire 1 $ carga $end
$var reg 1 # q $end
$upscope $end
$scope module inc $end
$var wire 10 B d0 [9:0] $end
$var wire 10 C y [9:0] $end
$var wire 1 ( s $end
$var wire 10 D d1 [9:0] $end
$upscope $end
$scope module inm $end
$var wire 8 E d1 [7:0] $end
$var wire 8 F y [7:0] $end
$var wire 1 ' s $end
$var wire 8 G d0 [7:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 10 H a [9:0] $end
$var wire 1 ! clk $end
$var wire 16 I rd [15:0] $end
$upscope $end
$scope module mux_stack $end
$var wire 10 J d0 [9:0] $end
$var wire 10 K y [9:0] $end
$var wire 1 & s $end
$var wire 10 L d1 [9:0] $end
$upscope $end
$scope module pila $end
$var wire 1 ! clk $end
$var wire 10 M push [9:0] $end
$var wire 1 " reset $end
$var wire 1 ) pushsignal $end
$var wire 1 * popsignal $end
$var reg 10 N pop [9:0] $end
$var reg 3 O stack_pointer [2:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 P a [9:0] $end
$var wire 10 Q b [9:0] $end
$var wire 10 R y [9:0] $end
$upscope $end
$scope module unidad_alu $end
$var wire 8 S a [7:0] $end
$var wire 8 T b [7:0] $end
$var wire 8 U y [7:0] $end
$var wire 1 9 zero $end
$var wire 3 V op_alu [2:0] $end
$var reg 8 W s [7:0] $end
$upscope $end
$upscope $end
$scope module unidad_control $end
$var wire 6 X opcode [5:0] $end
$var wire 1 # z $end
$var reg 3 Y op_alu [2:0] $end
$var reg 1 * pop $end
$var reg 1 ) push $end
$var reg 1 ( s_inc $end
$var reg 1 ' s_inm $end
$var reg 1 & s_stack $end
$var reg 1 % we3 $end
$var reg 1 $ wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx Y
b110001 X
bx W
bx V
bx U
b0 T
b0 S
b1 R
b0 Q
b1 P
b0 O
bx N
b0 M
bx L
b1 K
b1 J
b1100010000010111 I
b0 H
bx G
bx F
b1000001 E
b1 D
b1 C
b10111 B
b0 A
b1 @
b0 ?
b0 >
bx =
b111 <
b1 ;
b100 :
x9
bx 8
b110001 7
b0 6
b0 5
bx 4
b0 3
b1100010000010111 2
b1 1
bx 0
b1 /
bx .
b1 -
bx ,
b110001 +
0*
0)
1(
x'
0&
x%
x$
0#
1"
1!
$end
#1000
0"
#3000
0!
#6000
b1 O
0$
0%
1)
b10 /
b10 @
b10 K
b0 E
b0 <
b0 ;
b0 :
b111000 +
b111000 7
b111000 X
b0 B
b10 1
b10 C
b10 J
b1110000000000000 2
b1110000000000000 I
b10 -
b10 D
b10 R
b1 3
b1 A
b1 H
b1 M
b1 Q
1!
#9000
0!
#12000
0)
b11 /
b11 @
b11 K
b1000001 E
b111 <
b1 ;
b100 :
b110001 +
b110001 7
b110001 X
b10111 B
b11 1
b11 C
b11 J
b1100010000010111 2
b1100010000010111 I
b11 -
b11 D
b11 R
b10 3
b10 A
b10 H
b10 M
b10 Q
1!
#15000
0!
#18000
b100 /
b100 @
b100 K
b100 1
b100 C
b100 J
b100 -
b100 D
b100 R
b11 3
b11 A
b11 H
b11 M
b11 Q
1!
#21000
0!
#24000
b10 O
1)
b101 /
b101 @
b101 K
b0 E
b0 <
b0 ;
b0 :
b111000 +
b111000 7
b111000 X
b0 B
b101 1
b101 C
b101 J
b1110000000000000 2
b1110000000000000 I
b101 -
b101 D
b101 R
b100 3
b100 A
b100 H
b100 M
b100 Q
1!
#27000
0!
#30000
0)
b110 /
b110 @
b110 K
b1000001 E
b111 <
b1 ;
b100 :
b110001 +
b110001 7
b110001 X
b10111 B
b110 1
b110 C
b110 J
b1100010000010111 2
b1100010000010111 I
b110 -
b110 D
b110 R
b101 3
b101 A
b101 H
b101 M
b101 Q
1!
#33000
0!
#36000
b11 O
1)
b111 /
b111 @
b111 K
b0 E
b0 <
b0 ;
b0 :
b111000 +
b111000 7
b111000 X
b0 B
b111 1
b111 C
b111 J
b1110000000000000 2
b1110000000000000 I
b111 -
b111 D
b111 R
b110 3
b110 A
b110 H
b110 M
b110 Q
1!
#39000
0!
#42000
0)
b1000 /
b1000 @
b1000 K
b1000001 E
b111 <
b1 ;
b100 :
b110001 +
b110001 7
b110001 X
b10111 B
b1000 1
b1000 C
b1000 J
b1100010000010111 2
b1100010000010111 I
b1000 -
b1000 D
b1000 R
b111 3
b111 A
b111 H
b111 M
b111 Q
1!
#45000
0!
#48000
b110 .
b110 L
b110 N
b10 O
1*
1&
0(
b110 /
b110 @
b110 K
b0 E
b0 <
b0 ;
b0 :
b111100 +
b111100 7
b111100 X
b0 B
b0 1
b0 C
b0 J
b1111000000000000 2
b1111000000000000 I
b1001 -
b1001 D
b1001 R
b1000 3
b1000 A
b1000 H
b1000 M
b1000 Q
1!
#51000
0!
#54000
b11 O
b111 /
b111 @
b111 K
b111 1
b111 C
b111 J
0*
1)
0&
1(
b111000 +
b111000 7
b111000 X
b1110000000000000 2
b1110000000000000 I
b111 -
b111 D
b111 R
b110 3
b110 A
b110 H
b110 M
b110 Q
1!
