$date
	Thu Apr  1 17:55:02 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var wire 8 ! out4 [7:0] $end
$var wire 8 " out3 [7:0] $end
$var wire 8 # out2 [7:0] $end
$var wire 8 $ out1 [7:0] $end
$var reg 1 % clk $end
$var reg 8 & in1 [7:0] $end
$var reg 8 ' in2 [7:0] $end
$var reg 1 ( intr1 $end
$var reg 1 ) intr2 $end
$var reg 1 * reset $end
$scope module micpu $end
$var wire 1 % clk $end
$var wire 8 + in1 [7:0] $end
$var wire 8 , in2 [7:0] $end
$var wire 1 ( intr1 $end
$var wire 1 ) intr2 $end
$var wire 1 * reset $end
$var wire 1 - z $end
$var wire 1 . wez $end
$var wire 1 / we_out $end
$var wire 1 0 we4 $end
$var wire 1 1 we3 $end
$var wire 1 2 s_stack $end
$var wire 2 3 s_out [1:0] $end
$var wire 2 4 s_inm [1:0] $end
$var wire 1 5 s_inc $end
$var wire 2 6 s_in [1:0] $end
$var wire 1 7 push $end
$var wire 1 8 pop $end
$var wire 8 9 out4 [7:0] $end
$var wire 8 : out3 [7:0] $end
$var wire 8 ; out2 [7:0] $end
$var wire 8 < out1 [7:0] $end
$var wire 16 = opcode [15:0] $end
$var wire 3 > op_alu [2:0] $end
$scope module camino_datos $end
$var wire 1 % clk $end
$var wire 8 ? in1 [7:0] $end
$var wire 8 @ in2 [7:0] $end
$var wire 1 A or_push $end
$var wire 1 B rege1 $end
$var wire 1 C rege2 $end
$var wire 1 D rege3 $end
$var wire 1 E rege4 $end
$var wire 1 * reset $end
$var wire 1 F s_intr $end
$var wire 1 ( s_intr1 $end
$var wire 1 ) s_intr2 $end
$var wire 1 G s_pc $end
$var wire 10 H salida_int1_reg [9:0] $end
$var wire 10 I salida_int2_reg [9:0] $end
$var wire 1 J temp1 $end
$var wire 1 K temp2 $end
$var wire 1 - z $end
$var wire 1 . wez $end
$var wire 1 / we_out $end
$var wire 1 0 we4 $end
$var wire 1 1 we3 $end
$var wire 10 L salida_sumador [9:0] $end
$var wire 10 M salida_pila [9:0] $end
$var wire 10 N salida_mux_stack [9:0] $end
$var wire 10 O salida_mux_pc [9:0] $end
$var wire 8 P salida_mux_out [7:0] $end
$var wire 10 Q salida_mux_intr [9:0] $end
$var wire 8 R salida_mux_inm [7:0] $end
$var wire 10 S salida_mux_inc [9:0] $end
$var wire 16 T salida_memoria_programa [15:0] $end
$var wire 8 U salida_memoria_datos [7:0] $end
$var wire 10 V salida_contador_programa [9:0] $end
$var wire 8 W salida_alu [7:0] $end
$var wire 1 2 s_stack $end
$var wire 2 X s_out [1:0] $end
$var wire 2 Y s_inm [1:0] $end
$var wire 1 5 s_inc $end
$var wire 2 Z s_in [1:0] $end
$var wire 8 [ rd2 [7:0] $end
$var wire 8 \ rd1 [7:0] $end
$var wire 1 7 pushsignal $end
$var wire 1 8 popsignal $end
$var wire 8 ] out4 [7:0] $end
$var wire 8 ^ out3 [7:0] $end
$var wire 8 _ out2 [7:0] $end
$var wire 8 ` out1 [7:0] $end
$var wire 16 a opcode [15:0] $end
$var wire 3 b op_alu [2:0] $end
$var wire 8 c entrada_io [7:0] $end
$var wire 1 d entrada_ffz $end
$var wire 1 e d3 $end
$var wire 1 f d2 $end
$var wire 1 g d1 $end
$var wire 1 h d0 $end
$scope module banco_registros $end
$var wire 1 % clk $end
$var wire 4 i ra1 [3:0] $end
$var wire 4 j ra2 [3:0] $end
$var wire 4 k wa3 [3:0] $end
$var wire 1 1 we3 $end
$var wire 8 l wd3 [7:0] $end
$var wire 8 m rd2 [7:0] $end
$var wire 8 n rd1 [7:0] $end
$upscope $end
$scope module contador_programa $end
$var wire 1 % clk $end
$var wire 1 * reset $end
$var wire 10 o d [9:0] $end
$var reg 10 p q [9:0] $end
$upscope $end
$scope module deco_out $end
$var wire 1 h d0 $end
$var wire 1 g d1 $end
$var wire 1 f d2 $end
$var wire 1 e d3 $end
$var wire 2 q in [1:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 % clk $end
$var wire 1 * reset $end
$var wire 1 d d $end
$var wire 1 . carga $end
$var reg 1 - q $end
$upscope $end
$scope module in $end
$var wire 8 r d0 [7:0] $end
$var wire 8 s d1 [7:0] $end
$var wire 8 t d2 [7:0] $end
$var wire 8 u d3 [7:0] $end
$var wire 2 v s [1:0] $end
$var reg 8 w y [7:0] $end
$upscope $end
$scope module inc $end
$var wire 10 x d0 [9:0] $end
$var wire 10 y y [9:0] $end
$var wire 1 5 s $end
$var wire 10 z d1 [9:0] $end
$upscope $end
$scope module inm $end
$var wire 8 { d1 [7:0] $end
$var wire 8 | d3 [7:0] $end
$var wire 2 } s [1:0] $end
$var wire 8 ~ d2 [7:0] $end
$var wire 8 !" d0 [7:0] $end
$var reg 8 "" y [7:0] $end
$upscope $end
$scope module int1_reg $end
$var wire 10 #" out [9:0] $end
$upscope $end
$scope module int2_reg $end
$var wire 10 $" out [9:0] $end
$upscope $end
$scope module memoria_datos $end
$var wire 1 % clk $end
$var wire 12 %" ra [11:0] $end
$var wire 8 &" wd4 [7:0] $end
$var wire 1 0 we4 $end
$var wire 8 '" rd1 [7:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 10 (" a [9:0] $end
$var wire 1 % clk $end
$var wire 16 )" rd [15:0] $end
$upscope $end
$scope module mux_intr $end
$var wire 10 *" d0 [9:0] $end
$var wire 10 +" d1 [9:0] $end
$var wire 1 F s $end
$var wire 10 ," y [9:0] $end
$upscope $end
$scope module mux_pc $end
$var wire 10 -" d1 [9:0] $end
$var wire 1 G s $end
$var wire 10 ." y [9:0] $end
$var wire 10 /" d0 [9:0] $end
$upscope $end
$scope module mux_stack $end
$var wire 10 0" d0 [9:0] $end
$var wire 10 1" y [9:0] $end
$var wire 1 2 s $end
$var wire 10 2" d1 [9:0] $end
$upscope $end
$scope module out $end
$var wire 8 3" d0 [7:0] $end
$var wire 8 4" d1 [7:0] $end
$var wire 8 5" d2 [7:0] $end
$var wire 8 6" d3 [7:0] $end
$var wire 2 7" s [1:0] $end
$var reg 8 8" y [7:0] $end
$upscope $end
$scope module pila $end
$var wire 1 % clk $end
$var wire 10 9" push [9:0] $end
$var wire 1 A pushsignal $end
$var wire 1 * reset $end
$var wire 1 8 popsignal $end
$var reg 10 :" pop [9:0] $end
$var reg 3 ;" stack_pointer [2:0] $end
$upscope $end
$scope module reg1_out $end
$var wire 1 B clk $end
$var wire 8 <" d [7:0] $end
$var wire 1 * reset $end
$var reg 8 =" q [7:0] $end
$upscope $end
$scope module reg2_out $end
$var wire 1 C clk $end
$var wire 8 >" d [7:0] $end
$var wire 1 * reset $end
$var reg 8 ?" q [7:0] $end
$upscope $end
$scope module reg3_out $end
$var wire 1 D clk $end
$var wire 8 @" d [7:0] $end
$var wire 1 * reset $end
$var reg 8 A" q [7:0] $end
$upscope $end
$scope module reg4_out $end
$var wire 1 E clk $end
$var wire 8 B" d [7:0] $end
$var wire 1 * reset $end
$var reg 8 C" q [7:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 D" a [9:0] $end
$var wire 10 E" b [9:0] $end
$var wire 10 F" y [9:0] $end
$upscope $end
$scope module unidad_alu $end
$var wire 8 G" a [7:0] $end
$var wire 8 H" b [7:0] $end
$var wire 8 I" y [7:0] $end
$var wire 1 d zero $end
$var wire 3 J" op_alu [2:0] $end
$var reg 8 K" s [7:0] $end
$upscope $end
$upscope $end
$scope module unidad_control $end
$var wire 1 ( intr1 $end
$var wire 1 ) intr2 $end
$var wire 16 L" opcode [15:0] $end
$var wire 1 - z $end
$var reg 3 M" op_alu [2:0] $end
$var reg 1 8 pop $end
$var reg 1 7 push $end
$var reg 2 N" s_in [1:0] $end
$var reg 1 5 s_inc $end
$var reg 2 O" s_inm [1:0] $end
$var reg 2 P" s_out [1:0] $end
$var reg 1 2 s_stack $end
$var reg 1 1 we3 $end
$var reg 1 0 we4 $end
$var reg 1 / we_out $end
$var reg 1 . wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx P"
b11 O"
b0 N"
b0 M"
b101010 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b1 F"
b0 E"
b1 D"
b0 C"
bx B"
b0 A"
bx @"
b0 ?"
bx >"
b0 ="
bx <"
b0 ;"
bx :"
b1 9"
bx 8"
bx 7"
bz 6"
bz 5"
b0 4"
b0 3"
bx 2"
b1 1"
b1 0"
b1 /"
b1 ."
b1010 -"
b1010 ,"
b1010 +"
b1000 *"
b1010100000000011 )"
b0 ("
b0 '"
b0 &"
b100000000011 %"
b1010 $"
b1000 #"
bx ""
b0 !"
b0 ~
b11 }
bx |
b10000000 {
b1 z
b1 y
b11 x
bx w
b0 v
bz u
bz t
bx s
bx r
b11 q
b0 p
b1 o
b0 n
b0 m
bx l
b11 k
b0 j
b1000 i
0h
0g
0f
1e
1d
bx c
b0 b
b101010 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b11 Y
bx X
b0 W
b0 V
b0 U
b1010100000000011 T
b1 S
bx R
b1010 Q
bx P
b1 O
b1 N
bx M
b1 L
0K
1J
b1010 I
b1000 H
0G
1F
0E
0D
0C
0B
0A
bx @
bx ?
b0 >
b101010 =
b0 <
b0 ;
b0 :
b0 9
08
07
b0 6
15
b11 4
bx 3
02
11
00
0/
0.
0-
bx ,
bx +
1*
0)
0(
bx '
bx &
1%
b0 $
b0 #
b0 "
b0 !
$end
#1000
0*
#3000
0%
#6000
b1111 R
b1111 l
b1111 ""
1h
0e
b1 4
b1 Y
b1 }
b1 O"
b10 N
b10 /"
b10 1"
b10 9"
b0 q
b111101 4"
b11110100 %"
b1111 {
b100 k
b1111 j
b0 i
b100000 =
b100000 a
b100000 L"
b11110100 x
b10 S
b10 y
b10 0"
b1000000011110100 T
b1000000011110100 )"
b10 L
b10 z
b10 F"
b1 V
b1 p
b1 ("
b1 E"
b1000 Q
b1000 ,"
b1000 -"
0F
b1 ;"
b1000 O
b1000 o
b1000 ."
0J
1A
1G
1%
1(
#9000
0%
#12000
b0 R
b0 l
b0 ""
b0 4
b0 Y
b0 }
b0 O"
1.
b1001 N
b1001 /"
b1001 1"
b1001 9"
b0 4"
b0 %"
b0 {
b0 k
b0 j
b0 =
b0 a
b0 L"
b0 x
b1001 S
b1001 y
b1001 0"
b0 T
b0 )"
b1001 L
b1001 z
b1001 F"
b1000 V
b1000 p
b1000 ("
b1000 E"
b1010 Q
b1010 ,"
b1010 -"
1F
b1001 O
b1001 o
b1001 ."
1J
0A
0G
1%
0(
#15000
0%
#18000
b1010 O
b1010 o
b1010 ."
b1010 N
b1010 /"
b1010 1"
b1010 9"
b1010 S
b1010 y
b1010 0"
1-
b1010 L
b1010 z
b1010 F"
b1001 V
b1001 p
b1001 ("
b1001 E"
1%
#21000
0%
#24000
b1 M
b1 2"
b1 :"
b0 ;"
b1 O
b1 o
b1 ."
0.
01
12
18
05
b1 N
b1 /"
b1 1"
b1 9"
b101000 =
b101000 a
b101000 L"
b0 S
b0 y
b0 0"
b1010000000000000 T
b1010000000000000 )"
b1011 L
b1011 z
b1011 F"
b1010 V
b1010 p
b1010 ("
b1010 E"
1%
#27000
0%
#30000
b1111 R
b1111 l
b1111 ""
b10 O
b10 o
b10 ."
b10 N
b10 /"
b10 1"
b10 9"
b1 4
b1 Y
b1 }
b1 O"
02
08
11
15
b10 S
b10 y
b10 0"
b111101 4"
b11110100 %"
b1111 {
b100 k
b1111 j
b100000 =
b100000 a
b100000 L"
b11110100 x
b1000000011110100 T
b1000000011110100 )"
b10 L
b10 z
b10 F"
b1 V
b1 p
b1 ("
b1 E"
1%
#33000
0%
#36000
b101000 P
b101000 8"
b101000 <"
b101000 >"
b101000 @"
b101000 B"
b0 R
b0 l
b0 ""
1B
b11 O
b11 o
b11 ."
b100 [
b100 m
b100 3"
b100 H"
b1 3
b1 X
b1 7"
b1 P"
1/
b0 4
b0 Y
b0 }
b0 O"
01
b11 N
b11 /"
b11 1"
b11 9"
b101000 4"
b10100000 %"
b1010 {
b0 k
b1010 j
b101100 =
b101100 a
b101100 L"
b10100000 x
b11 S
b11 y
b11 0"
b1011000010100000 T
b1011000010100000 )"
b11 L
b11 z
b11 F"
b10 V
b10 p
b10 ("
b10 E"
1%
#39000
0%
#42000
b101000 $
b101000 <
b101000 `
b101000 ="
b1111 P
b1111 8"
b1111 <"
b1111 >"
b1111 @"
b1111 B"
0B
0h
1C
1g
b100 O
b100 o
b100 ."
b1111 [
b1111 m
b1111 3"
b1111 H"
b0 3
b0 X
b0 7"
b0 P"
b100 N
b100 /"
b100 1"
b100 9"
b1 q
b10000 4"
b110001000001 %"
b11000100 {
b1 k
b100 j
b1100 i
b101011 =
b101011 a
b101011 L"
b1000001 x
b100 S
b100 y
b100 0"
b1010110001000001 T
b1010110001000001 )"
b100 L
b100 z
b100 F"
b11 V
b11 p
b11 ("
b11 E"
1%
#45000
0%
#48000
b1111 #
b1111 ;
b1111 _
b1111 ?"
0C
1D
0g
1f
b101 O
b101 o
b101 ."
b101 N
b101 /"
b101 1"
b101 9"
b10 q
b110001000010 %"
b10 k
b1000010 x
b101 S
b101 y
b101 0"
b1010110001000010 T
b1010110001000010 )"
b101 L
b101 z
b101 F"
b100 V
b100 p
b100 ("
b100 E"
1%
#51000
0%
#54000
b1111 "
b1111 :
b1111 ^
b1111 A"
0D
0f
1E
1e
b110 O
b110 o
b110 ."
b110 N
b110 /"
b110 1"
b110 9"
b11 q
b110001000011 %"
b11 k
b1000011 x
b110 S
b110 y
b110 0"
b1010110001000011 T
b1010110001000011 )"
b110 L
b110 z
b110 F"
b101 V
b101 p
b101 ("
b101 E"
1%
