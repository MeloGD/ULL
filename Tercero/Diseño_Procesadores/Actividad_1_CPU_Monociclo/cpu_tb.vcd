$date
	Wed Mar 10 11:28:25 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module micpu $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 1 & s_stack $end
$var wire 1 ' s_inm $end
$var wire 1 ( s_inc $end
$var wire 1 ) push $end
$var wire 1 * pop $end
$var wire 6 + opcode [5:0] $end
$var wire 3 , op_alu [2:0] $end
$scope module camino_datos $end
$var wire 1 ! clk $end
$var wire 1 - popsignal $end
$var wire 1 . pushsignal $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 10 / salida_sumador [9:0] $end
$var wire 10 0 salida_pila [9:0] $end
$var wire 10 1 salida_mux_stack [9:0] $end
$var wire 8 2 salida_mux_inm [7:0] $end
$var wire 10 3 salida_mux_inc [9:0] $end
$var wire 16 4 salida_memoria_programa [15:0] $end
$var wire 10 5 salida_contador_programa [9:0] $end
$var wire 8 6 salida_alu [7:0] $end
$var wire 1 & s_stack $end
$var wire 1 ' s_inm $end
$var wire 1 ( s_inc $end
$var wire 8 7 rd2 [7:0] $end
$var wire 8 8 rd1 [7:0] $end
$var wire 1 ) push_signal $end
$var wire 1 * pop_signal $end
$var wire 6 9 opcode [5:0] $end
$var wire 3 : op_alu [2:0] $end
$var wire 1 ; entrada_ffz $end
$scope module banco_registros $end
$var wire 1 ! clk $end
$var wire 4 < ra1 [3:0] $end
$var wire 4 = ra2 [3:0] $end
$var wire 4 > wa3 [3:0] $end
$var wire 1 % we3 $end
$var wire 8 ? wd3 [7:0] $end
$var wire 8 @ rd2 [7:0] $end
$var wire 8 A rd1 [7:0] $end
$upscope $end
$scope module contador_programa $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 10 B d [9:0] $end
$var reg 10 C q [9:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 ; d $end
$var wire 1 $ carga $end
$var reg 1 # q $end
$upscope $end
$scope module inc $end
$var wire 10 D d0 [9:0] $end
$var wire 10 E y [9:0] $end
$var wire 1 ( s $end
$var wire 10 F d1 [9:0] $end
$upscope $end
$scope module inm $end
$var wire 8 G d1 [7:0] $end
$var wire 8 H y [7:0] $end
$var wire 1 ' s $end
$var wire 8 I d0 [7:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 10 J a [9:0] $end
$var wire 1 ! clk $end
$var wire 16 K rd [15:0] $end
$upscope $end
$scope module mux_stack $end
$var wire 10 L d0 [9:0] $end
$var wire 10 M y [9:0] $end
$var wire 1 & s $end
$var wire 10 N d1 [9:0] $end
$upscope $end
$scope module pila $end
$var wire 1 ! clk $end
$var wire 1 - popsignal $end
$var wire 10 O push [9:0] $end
$var wire 1 . pushsignal $end
$var wire 1 " reset $end
$var reg 10 P pop [9:0] $end
$var reg 3 Q stack_pointer [2:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 R a [9:0] $end
$var wire 10 S b [9:0] $end
$var wire 10 T y [9:0] $end
$upscope $end
$scope module unidad_alu $end
$var wire 8 U a [7:0] $end
$var wire 8 V b [7:0] $end
$var wire 8 W y [7:0] $end
$var wire 1 ; zero $end
$var wire 3 X op_alu [2:0] $end
$var reg 8 Y s [7:0] $end
$upscope $end
$upscope $end
$scope module unidad_control $end
$var wire 6 Z opcode [5:0] $end
$var wire 1 # z $end
$var reg 3 [ op_alu [2:0] $end
$var reg 1 * pop $end
$var reg 1 ) push $end
$var reg 1 ( s_inc $end
$var reg 1 ' s_inm $end
$var reg 1 & s_stack $end
$var reg 1 % we3 $end
$var reg 1 $ wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx [
b100011 Z
bx Y
bx X
bx W
b0 V
b0 U
b1 T
b0 S
b1 R
b0 Q
bx P
b0 O
bx N
bx M
b1 L
b1000111100001010 K
b0 J
bx I
b11110000 H
b11110000 G
b1 F
b1 E
b1100001010 D
b0 C
bx B
b0 A
b0 @
b11110000 ?
b1010 >
b0 =
b1111 <
x;
bx :
b100011 9
b0 8
b0 7
bx 6
b0 5
b1000111100001010 4
b1 3
b11110000 2
bx 1
bx 0
b1 /
z.
z-
bx ,
b100011 +
x*
x)
1(
1'
x&
1%
x$
0#
1"
1!
$end
#1000
0"
#3000
0!
#6000
bx 2
bx ?
bx H
bx 7
bx @
bx V
bx 8
bx A
bx U
bx G
bx >
bx =
bx <
bx +
bx 9
bx Z
bx D
bx 3
bx E
bx L
bx 4
bx K
bx /
bx F
bx T
bx 5
bx C
bx J
bx O
bx S
b0 Q
1!
#9000
0!
#12000
b0 Q
1!
#15000
0!
#18000
b0 Q
1!
#21000
0!
#24000
b0 Q
1!
#27000
0!
#30000
b0 Q
1!
#33000
0!
#36000
b0 Q
1!
#39000
0!
#42000
b0 Q
1!
#45000
0!
#48000
b0 Q
1!
#51000
0!
#54000
b0 Q
1!
