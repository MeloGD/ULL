$date
	Tue Mar 30 17:35:29 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var wire 8 ! out4 [7:0] $end
$var wire 8 " out3 [7:0] $end
$var wire 8 # out2 [7:0] $end
$var wire 8 $ out1 [7:0] $end
$var reg 1 % clk $end
$var reg 8 & in1 [7:0] $end
$var reg 8 ' in2 [7:0] $end
$var reg 1 ( reset $end
$scope module micpu $end
$var wire 1 % clk $end
$var wire 8 ) in1 [7:0] $end
$var wire 8 * in2 [7:0] $end
$var wire 1 ( reset $end
$var wire 1 + z $end
$var wire 1 , wez $end
$var wire 1 - we_out $end
$var wire 1 . we4 $end
$var wire 1 / we3 $end
$var wire 1 0 s_stack $end
$var wire 2 1 s_out [1:0] $end
$var wire 2 2 s_inm [1:0] $end
$var wire 1 3 s_inc $end
$var wire 2 4 s_in [1:0] $end
$var wire 1 5 push $end
$var wire 1 6 pop $end
$var wire 8 7 out4 [7:0] $end
$var wire 8 8 out3 [7:0] $end
$var wire 8 9 out2 [7:0] $end
$var wire 8 : out1 [7:0] $end
$var wire 16 ; opcode [15:0] $end
$var wire 3 < op_alu [2:0] $end
$scope module camino_datos $end
$var wire 1 % clk $end
$var wire 8 = in1 [7:0] $end
$var wire 8 > in2 [7:0] $end
$var wire 1 ? rege1 $end
$var wire 1 @ rege2 $end
$var wire 1 A rege3 $end
$var wire 1 B rege4 $end
$var wire 1 ( reset $end
$var wire 1 + z $end
$var wire 1 , wez $end
$var wire 1 - we_out $end
$var wire 1 . we4 $end
$var wire 1 / we3 $end
$var wire 10 C salida_sumador [9:0] $end
$var wire 10 D salida_pila [9:0] $end
$var wire 10 E salida_mux_stack [9:0] $end
$var wire 8 F salida_mux_out [7:0] $end
$var wire 8 G salida_mux_inm [7:0] $end
$var wire 10 H salida_mux_inc [9:0] $end
$var wire 16 I salida_memoria_programa [15:0] $end
$var wire 8 J salida_memoria_datos [7:0] $end
$var wire 10 K salida_contador_programa [9:0] $end
$var wire 8 L salida_alu [7:0] $end
$var wire 1 0 s_stack $end
$var wire 2 M s_out [1:0] $end
$var wire 2 N s_inm [1:0] $end
$var wire 1 3 s_inc $end
$var wire 2 O s_in [1:0] $end
$var wire 8 P rd2 [7:0] $end
$var wire 8 Q rd1 [7:0] $end
$var wire 1 5 pushsignal $end
$var wire 1 6 popsignal $end
$var wire 8 R out4 [7:0] $end
$var wire 8 S out3 [7:0] $end
$var wire 8 T out2 [7:0] $end
$var wire 8 U out1 [7:0] $end
$var wire 16 V opcode [15:0] $end
$var wire 3 W op_alu [2:0] $end
$var wire 8 X entrada_io [7:0] $end
$var wire 1 Y entrada_ffz $end
$var wire 1 Z d3 $end
$var wire 1 [ d2 $end
$var wire 1 \ d1 $end
$var wire 1 ] d0 $end
$scope module banco_registros $end
$var wire 1 % clk $end
$var wire 4 ^ ra1 [3:0] $end
$var wire 4 _ ra2 [3:0] $end
$var wire 4 ` wa3 [3:0] $end
$var wire 1 / we3 $end
$var wire 8 a wd3 [7:0] $end
$var wire 8 b rd2 [7:0] $end
$var wire 8 c rd1 [7:0] $end
$upscope $end
$scope module contador_programa $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var wire 10 d d [9:0] $end
$var reg 10 e q [9:0] $end
$upscope $end
$scope module deco_out $end
$var wire 1 ] d0 $end
$var wire 1 \ d1 $end
$var wire 1 [ d2 $end
$var wire 1 Z d3 $end
$var wire 2 f in [1:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var wire 1 Y d $end
$var wire 1 , carga $end
$var reg 1 + q $end
$upscope $end
$scope module in $end
$var wire 8 g d0 [7:0] $end
$var wire 8 h d1 [7:0] $end
$var wire 8 i d2 [7:0] $end
$var wire 8 j d3 [7:0] $end
$var wire 2 k s [1:0] $end
$var reg 8 l y [7:0] $end
$upscope $end
$scope module inc $end
$var wire 10 m d0 [9:0] $end
$var wire 10 n y [9:0] $end
$var wire 1 3 s $end
$var wire 10 o d1 [9:0] $end
$upscope $end
$scope module inm $end
$var wire 8 p d1 [7:0] $end
$var wire 8 q d3 [7:0] $end
$var wire 2 r s [1:0] $end
$var wire 8 s d2 [7:0] $end
$var wire 8 t d0 [7:0] $end
$var reg 8 u y [7:0] $end
$upscope $end
$scope module memoria_datos $end
$var wire 1 % clk $end
$var wire 12 v ra [11:0] $end
$var wire 8 w wd4 [7:0] $end
$var wire 1 . we4 $end
$var wire 8 x rd1 [7:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 10 y a [9:0] $end
$var wire 1 % clk $end
$var wire 16 z rd [15:0] $end
$upscope $end
$scope module mux_stack $end
$var wire 10 { d0 [9:0] $end
$var wire 10 | y [9:0] $end
$var wire 1 0 s $end
$var wire 10 } d1 [9:0] $end
$upscope $end
$scope module out $end
$var wire 8 ~ d0 [7:0] $end
$var wire 8 !" d1 [7:0] $end
$var wire 8 "" d2 [7:0] $end
$var wire 8 #" d3 [7:0] $end
$var wire 2 $" s [1:0] $end
$var reg 8 %" y [7:0] $end
$upscope $end
$scope module pila $end
$var wire 1 % clk $end
$var wire 10 &" push [9:0] $end
$var wire 1 ( reset $end
$var wire 1 5 pushsignal $end
$var wire 1 6 popsignal $end
$var reg 10 '" pop [9:0] $end
$var reg 3 (" stack_pointer [2:0] $end
$upscope $end
$scope module reg1_out $end
$var wire 1 ? clk $end
$var wire 8 )" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 *" q [7:0] $end
$upscope $end
$scope module reg2_out $end
$var wire 1 @ clk $end
$var wire 8 +" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 ," q [7:0] $end
$upscope $end
$scope module reg3_out $end
$var wire 1 A clk $end
$var wire 8 -" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 ." q [7:0] $end
$upscope $end
$scope module reg4_out $end
$var wire 1 B clk $end
$var wire 8 /" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 0" q [7:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 1" a [9:0] $end
$var wire 10 2" b [9:0] $end
$var wire 10 3" y [9:0] $end
$upscope $end
$scope module unidad_alu $end
$var wire 8 4" a [7:0] $end
$var wire 8 5" b [7:0] $end
$var wire 8 6" y [7:0] $end
$var wire 1 Y zero $end
$var wire 3 7" op_alu [2:0] $end
$var reg 8 8" s [7:0] $end
$upscope $end
$upscope $end
$scope module unidad_control $end
$var wire 16 9" opcode [15:0] $end
$var wire 1 + z $end
$var reg 3 :" op_alu [2:0] $end
$var reg 1 6 pop $end
$var reg 1 5 push $end
$var reg 2 ;" s_in [1:0] $end
$var reg 1 3 s_inc $end
$var reg 2 <" s_inm [1:0] $end
$var reg 2 =" s_out [1:0] $end
$var reg 1 0 s_stack $end
$var reg 1 / we3 $end
$var reg 1 . we4 $end
$var reg 1 - we_out $end
$var reg 1 , wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ="
b10 <"
bx ;"
b0 :"
b111100 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b1 3"
b0 2"
b1 1"
b0 0"
bx /"
b0 ."
bx -"
b0 ,"
bx +"
b0 *"
bx )"
b0 ("
bx '"
b1 &"
bx %"
bx $"
bz #"
bz ""
b0 !"
b0 ~
bx }
b1 |
b1 {
b1111000000000001 z
b0 y
b1000 x
b0 w
b1 v
b1000 u
b0 t
b1000 s
b10 r
bx q
b0 p
b1 o
b1 n
b1 m
bx l
bx k
bz j
bz i
bx h
bx g
b1 f
b0 e
b1 d
b0 c
b0 b
b1000 a
b1 `
b0 _
b0 ^
0]
1\
0[
0Z
1Y
bx X
b0 W
b111100 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
bx O
b10 N
bx M
b0 L
b0 K
b1000 J
b1111000000000001 I
b1 H
b1000 G
bx F
b1 E
bx D
b1 C
0B
0A
x@
0?
bx >
bx =
b0 <
b111100 ;
b0 :
b0 9
b0 8
b0 7
06
05
bx 4
13
b10 2
bx 1
00
1/
0.
x-
0,
0+
bx *
bx )
1(
bx '
bx &
1%
b0 $
b0 #
b0 "
b0 !
$end
#1000
0(
#3000
0%
#6000
bx $
bx :
bx U
bx *"
b0 G
b0 a
b0 u
x?
1]
0@
0\
b0 J
b0 s
b0 x
b1 ("
b0 2
b0 N
b0 r
b0 <"
15
0/
b10 E
b10 d
b10 |
b10 &"
b0 f
b1000000 !"
b10000000000 v
b1000000 p
b0 `
b100 ^
b101001 ;
b101001 V
b101001 9"
b0 m
b10 H
b10 n
b10 {
b1010010000000000 I
b1010010000000000 z
b10 C
b10 o
b10 3"
b1 K
b1 e
b1 y
b1 2"
1%
#9000
0%
#12000
bx #
bx 9
bx T
bx ,"
bx !
bx 7
bx R
bx 0"
b1011 G
b1011 a
b1011 u
0?
0]
0@
xB
0Y
0\
1Z
b1011 L
b1011 t
b1011 6"
b1011 8"
b11 P
b11 b
b11 5"
b1000 Q
b1000 c
b1000 w
b1000 ~
b1000 4"
b10 <
b10 W
b10 7"
b10 :"
05
1,
1/
b11 E
b11 d
b11 |
b11 &"
b11 f
b10010 !"
b100100011 v
b10010 p
b11 `
b10 _
b1 ^
b1000 ;
b1000 V
b1000 9"
b100100011 m
b11 H
b11 n
b11 {
b10000100100011 I
b10000100100011 z
b11 C
b11 o
b11 3"
b10 K
b10 e
b10 y
b10 2"
1%
#15000
0%
#18000
b0 G
b0 a
b0 u
x?
1]
0B
1Y
0Z
b0 L
b0 t
b0 6"
b0 8"
b10 D
b10 }
b10 '"
b0 ("
b0 P
b0 b
b0 5"
b0 Q
b0 c
b0 w
b0 ~
b0 4"
0,
0/
10
16
03
b10 E
b10 d
b10 |
b10 &"
b0 f
b0 !"
b0 v
b0 p
b0 `
b0 _
b0 ^
b101000 ;
b101000 V
b101000 9"
b0 m
b0 H
b0 n
b0 {
b1010000000000000 I
b1010000000000000 z
b100 C
b100 o
b100 3"
b11 K
b11 e
b11 y
b11 2"
1%
#21000
0%
#24000
b1011 G
b1011 a
b1011 u
0?
0]
0@
xB
0Y
0\
1Z
b1011 L
b1011 t
b1011 6"
b1011 8"
b11 E
b11 d
b11 |
b11 &"
b11 P
b11 b
b11 5"
b1000 Q
b1000 c
b1000 w
b1000 ~
b1000 4"
00
06
1,
1/
13
b11 H
b11 n
b11 {
b11 f
b10010 !"
b100100011 v
b10010 p
b11 `
b10 _
b1 ^
b1000 ;
b1000 V
b1000 9"
b100100011 m
b10000100100011 I
b10000100100011 z
b11 C
b11 o
b11 3"
b10 K
b10 e
b10 y
b10 2"
1%
#27000
0%
#30000
b0 G
b0 a
b0 u
x?
1]
0B
1Y
0Z
b0 L
b0 t
b0 6"
b0 8"
bx D
bx }
bx '"
b111 ("
b0 P
b0 b
b0 5"
b0 Q
b0 c
b0 w
b0 ~
b0 4"
0,
0/
10
16
03
bx E
bx d
bx |
bx &"
b0 f
b0 !"
b0 v
b0 p
b0 `
b0 _
b0 ^
b101000 ;
b101000 V
b101000 9"
b0 m
b0 H
b0 n
b0 {
b1010000000000000 I
b1010000000000000 z
b100 C
b100 o
b100 3"
b11 K
b11 e
b11 y
b11 2"
1%
#33000
0%
#36000
bx "
bx 8
bx S
bx ."
bx G
bx a
bx u
x]
x@
xA
xB
xY
x\
x[
xZ
bx L
bx t
bx 6"
bx 8"
bx J
bx s
bx x
bx P
bx b
bx 5"
bx Q
bx c
bx w
bx ~
bx 4"
bx H
bx n
bx {
bx f
bx !"
bx v
bx p
bx `
bx _
bx ^
b0xxxxxx ;
b0xxxxxx V
b0xxxxxx 9"
bx m
bx I
bx z
bx C
bx o
bx 3"
bx K
bx e
bx y
bx 2"
1%
#39000
0%
#42000
1%
#45000
0%
#48000
1%
#51000
0%
#54000
1%
