$date
	Sat Mar 20 12:54:19 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module micpu $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we4 $end
$var wire 1 & we3 $end
$var wire 1 ' s_stack $end
$var wire 2 ( s_inm [1:0] $end
$var wire 1 ) s_inc $end
$var wire 1 * push $end
$var wire 1 + pop $end
$var wire 6 , opcode [5:0] $end
$var wire 3 - op_alu [2:0] $end
$scope module camino_datos $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 8 . salida_io [7:0] $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we4 $end
$var wire 1 & we3 $end
$var wire 10 / salida_sumador [9:0] $end
$var wire 10 0 salida_pila [9:0] $end
$var wire 10 1 salida_mux_stack [9:0] $end
$var wire 8 2 salida_mux_inm [7:0] $end
$var wire 10 3 salida_mux_inc [9:0] $end
$var wire 16 4 salida_memoria_programa [15:0] $end
$var wire 8 5 salida_memoria_datos [7:0] $end
$var wire 10 6 salida_contador_programa [9:0] $end
$var wire 8 7 salida_alu [7:0] $end
$var wire 1 ' s_stack $end
$var wire 2 8 s_inm [1:0] $end
$var wire 1 ) s_inc $end
$var wire 8 9 rd2 [7:0] $end
$var wire 8 : rd1 [7:0] $end
$var wire 1 * pushsignal $end
$var wire 1 + popsignal $end
$var wire 6 ; opcode [5:0] $end
$var wire 3 < op_alu [2:0] $end
$var wire 1 = entrada_ffz $end
$scope module banco_registros $end
$var wire 1 ! clk $end
$var wire 4 > ra1 [3:0] $end
$var wire 4 ? ra2 [3:0] $end
$var wire 4 @ wa3 [3:0] $end
$var wire 1 & we3 $end
$var wire 8 A wd3 [7:0] $end
$var wire 8 B rd2 [7:0] $end
$var wire 8 C rd1 [7:0] $end
$upscope $end
$scope module contador_programa $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 10 D d [9:0] $end
$var reg 10 E q [9:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 = d $end
$var wire 1 $ carga $end
$var reg 1 # q $end
$upscope $end
$scope module inc $end
$var wire 10 F d0 [9:0] $end
$var wire 10 G y [9:0] $end
$var wire 1 ) s $end
$var wire 10 H d1 [9:0] $end
$upscope $end
$scope module inm $end
$var wire 8 I d1 [7:0] $end
$var wire 8 J d3 [7:0] $end
$var wire 2 K s [1:0] $end
$var wire 8 L d2 [7:0] $end
$var wire 8 M d0 [7:0] $end
$var reg 8 N y [7:0] $end
$upscope $end
$scope module mememoria_datos $end
$var wire 1 ! clk $end
$var wire 12 O ra [11:0] $end
$var wire 8 P wd4 [7:0] $end
$var wire 1 % we4 $end
$var wire 8 Q rd1 [7:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 10 R a [9:0] $end
$var wire 1 ! clk $end
$var wire 16 S rd [15:0] $end
$upscope $end
$scope module mux_stack $end
$var wire 10 T d0 [9:0] $end
$var wire 10 U y [9:0] $end
$var wire 1 ' s $end
$var wire 10 V d1 [9:0] $end
$upscope $end
$scope module pila $end
$var wire 1 ! clk $end
$var wire 10 W push [9:0] $end
$var wire 1 " reset $end
$var wire 1 * pushsignal $end
$var wire 1 + popsignal $end
$var reg 10 X pop [9:0] $end
$var reg 3 Y stack_pointer [2:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 Z a [9:0] $end
$var wire 10 [ b [9:0] $end
$var wire 10 \ y [9:0] $end
$upscope $end
$scope module unidad_alu $end
$var wire 8 ] a [7:0] $end
$var wire 8 ^ b [7:0] $end
$var wire 8 _ y [7:0] $end
$var wire 1 = zero $end
$var wire 3 ` op_alu [2:0] $end
$var reg 8 a s [7:0] $end
$upscope $end
$upscope $end
$scope module unidad_control $end
$var wire 6 b opcode [5:0] $end
$var wire 1 # z $end
$var reg 3 c op_alu [2:0] $end
$var reg 1 + pop $end
$var reg 1 * push $end
$var reg 1 ) s_inc $end
$var reg 2 d s_inm [1:0] $end
$var reg 1 ' s_stack $end
$var reg 1 & we3 $end
$var reg 1 % we4 $end
$var reg 1 $ wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 d
b0 c
b111100 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b1 \
b0 [
b1 Z
b0 Y
bx X
b0 W
bx V
b1 U
b1 T
b1111000000000001 S
b0 R
b1000 Q
b0 P
b1 O
b1000 N
b0 M
b1000 L
b10 K
bz J
b0 I
b1 H
b1 G
b1 F
b0 E
b1 D
b0 C
b0 B
b1000 A
b1 @
b0 ?
b0 >
1=
b0 <
b111100 ;
b0 :
b0 9
b10 8
b0 7
b0 6
b1000 5
b1111000000000001 4
b1 3
b1000 2
b1 1
bx 0
b1 /
bz .
b0 -
b111100 ,
0+
0*
1)
b10 (
0'
1&
0%
0$
0#
1"
1!
$end
#1000
0"
#3000
0!
#6000
b1011 2
b1011 A
b1011 N
0=
b0 5
b0 L
b0 Q
b1011 7
b1011 M
b1011 _
b1011 a
b11 9
b11 B
b11 ^
b1000 :
b1000 C
b1000 P
b1000 ]
b10 -
b10 <
b10 `
b10 c
b0 (
b0 8
b0 K
b0 d
1$
b10 1
b10 D
b10 U
b100100100 O
b10010 I
b100 @
b10 ?
b1 >
b1000 ,
b1000 ;
b1000 b
b100100100 F
b10 3
b10 G
b10 T
b10000100100100 4
b10000100100100 S
b10 /
b10 H
b10 \
b1 6
b1 E
b1 R
b1 W
b1 [
1!
#9000
0!
#12000
b1000 9
b1000 B
b1000 ^
b1011 :
b1011 C
b1011 P
b1011 ]
b0 -
b0 <
b0 `
b0 c
1%
0$
0&
b11 1
b11 D
b11 U
b10000011000 O
b1000001 I
b1000 @
b1 ?
b100 >
b111001 ,
b111001 ;
b111001 b
b11000 F
b11 3
b11 G
b11 T
b1110010000011000 4
b1110010000011000 S
b11 /
b11 H
b11 \
b10 6
b10 E
b10 R
b10 W
b10 [
1!
#15000
0!
#18000
b1011 2
b1011 A
b1011 N
1=
b1011 5
b1011 L
b1011 Q
b0 7
b0 M
b0 _
b0 a
b0 9
b0 B
b0 ^
b0 :
b0 C
b0 P
b0 ]
b10 (
b10 8
b10 K
b10 d
0%
1&
b100 1
b100 D
b100 U
b11000000111 O
b1100000 I
b111 @
b0 ?
b110 >
b111101 ,
b111101 ;
b111101 b
b1000000111 F
b100 3
b100 G
b100 T
b1111011000000111 4
b1111011000000111 S
b100 /
b100 H
b100 \
b11 6
b11 E
b11 R
b11 W
b11 [
1!
#21000
0!
#24000
b0 2
b0 A
b0 N
b0 5
b0 L
b0 Q
b0 (
b0 8
b0 K
b0 d
1$
b101 1
b101 D
b101 U
b0 O
b0 I
b0 @
b0 >
b0 ,
b0 ;
b0 b
b0 F
b101 3
b101 G
b101 T
b0 4
b0 S
b101 /
b101 H
b101 \
b100 6
b100 E
b100 R
b100 W
b100 [
1!
#27000
0!
#30000
b110 1
b110 D
b110 U
b110 3
b110 G
b110 T
1#
b110 /
b110 H
b110 \
b101 6
b101 E
b101 R
b101 W
b101 [
1!
#33000
0!
#36000
b111 1
b111 D
b111 U
b111 3
b111 G
b111 T
b111 /
b111 H
b111 \
b110 6
b110 E
b110 R
b110 W
b110 [
1!
#39000
0!
#42000
b1000 1
b1000 D
b1000 U
b1000 3
b1000 G
b1000 T
b1000 /
b1000 H
b1000 \
b111 6
b111 E
b111 R
b111 W
b111 [
1!
#45000
0!
#48000
b1001 1
b1001 D
b1001 U
b1001 3
b1001 G
b1001 T
b1001 /
b1001 H
b1001 \
b1000 6
b1000 E
b1000 R
b1000 W
b1000 [
1!
#51000
0!
#54000
b1010 1
b1010 D
b1010 U
b1010 3
b1010 G
b1010 T
b1010 /
b1010 H
b1010 \
b1001 6
b1001 E
b1001 R
b1001 W
b1001 [
1!
