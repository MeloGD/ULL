$date
	Tue Mar 30 22:50:07 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var wire 8 ! out4 [7:0] $end
$var wire 8 " out3 [7:0] $end
$var wire 8 # out2 [7:0] $end
$var wire 8 $ out1 [7:0] $end
$var reg 1 % clk $end
$var reg 8 & in1 [7:0] $end
$var reg 8 ' in2 [7:0] $end
$var reg 1 ( reset $end
$scope module micpu $end
$var wire 1 % clk $end
$var wire 8 ) in1 [7:0] $end
$var wire 8 * in2 [7:0] $end
$var wire 1 ( reset $end
$var wire 1 + z $end
$var wire 1 , wez $end
$var wire 1 - we_out $end
$var wire 1 . we4 $end
$var wire 1 / we3 $end
$var wire 1 0 s_stack $end
$var wire 2 1 s_out [1:0] $end
$var wire 2 2 s_inm [1:0] $end
$var wire 1 3 s_inc $end
$var wire 2 4 s_in [1:0] $end
$var wire 1 5 push $end
$var wire 1 6 pop $end
$var wire 8 7 out4 [7:0] $end
$var wire 8 8 out3 [7:0] $end
$var wire 8 9 out2 [7:0] $end
$var wire 8 : out1 [7:0] $end
$var wire 16 ; opcode [15:0] $end
$var wire 3 < op_alu [2:0] $end
$scope module camino_datos $end
$var wire 1 % clk $end
$var wire 8 = in1 [7:0] $end
$var wire 8 > in2 [7:0] $end
$var wire 1 ? rege1 $end
$var wire 1 @ rege2 $end
$var wire 1 A rege3 $end
$var wire 1 B rege4 $end
$var wire 1 ( reset $end
$var wire 1 + z $end
$var wire 1 , wez $end
$var wire 1 - we_out $end
$var wire 1 . we4 $end
$var wire 1 / we3 $end
$var wire 10 C salida_sumador [9:0] $end
$var wire 10 D salida_pila [9:0] $end
$var wire 10 E salida_mux_stack [9:0] $end
$var wire 8 F salida_mux_out [7:0] $end
$var wire 8 G salida_mux_inm [7:0] $end
$var wire 10 H salida_mux_inc [9:0] $end
$var wire 16 I salida_memoria_programa [15:0] $end
$var wire 8 J salida_memoria_datos [7:0] $end
$var wire 10 K salida_contador_programa [9:0] $end
$var wire 8 L salida_alu [7:0] $end
$var wire 1 0 s_stack $end
$var wire 2 M s_out [1:0] $end
$var wire 2 N s_inm [1:0] $end
$var wire 1 3 s_inc $end
$var wire 2 O s_in [1:0] $end
$var wire 8 P rd2 [7:0] $end
$var wire 8 Q rd1 [7:0] $end
$var wire 1 5 pushsignal $end
$var wire 1 6 popsignal $end
$var wire 8 R out4 [7:0] $end
$var wire 8 S out3 [7:0] $end
$var wire 8 T out2 [7:0] $end
$var wire 8 U out1 [7:0] $end
$var wire 16 V opcode [15:0] $end
$var wire 3 W op_alu [2:0] $end
$var wire 8 X entrada_io [7:0] $end
$var wire 1 Y entrada_ffz $end
$var wire 1 Z d3 $end
$var wire 1 [ d2 $end
$var wire 1 \ d1 $end
$var wire 1 ] d0 $end
$scope module banco_registros $end
$var wire 1 % clk $end
$var wire 4 ^ ra1 [3:0] $end
$var wire 4 _ ra2 [3:0] $end
$var wire 4 ` wa3 [3:0] $end
$var wire 1 / we3 $end
$var wire 8 a wd3 [7:0] $end
$var wire 8 b rd2 [7:0] $end
$var wire 8 c rd1 [7:0] $end
$upscope $end
$scope module contador_programa $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var wire 10 d d [9:0] $end
$var reg 10 e q [9:0] $end
$upscope $end
$scope module deco_out $end
$var wire 1 ] d0 $end
$var wire 1 \ d1 $end
$var wire 1 [ d2 $end
$var wire 1 Z d3 $end
$var wire 2 f in [1:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 % clk $end
$var wire 1 ( reset $end
$var wire 1 Y d $end
$var wire 1 , carga $end
$var reg 1 + q $end
$upscope $end
$scope module in $end
$var wire 8 g d0 [7:0] $end
$var wire 8 h d1 [7:0] $end
$var wire 8 i d2 [7:0] $end
$var wire 8 j d3 [7:0] $end
$var wire 2 k s [1:0] $end
$var reg 8 l y [7:0] $end
$upscope $end
$scope module inc $end
$var wire 10 m d0 [9:0] $end
$var wire 10 n y [9:0] $end
$var wire 1 3 s $end
$var wire 10 o d1 [9:0] $end
$upscope $end
$scope module inm $end
$var wire 8 p d1 [7:0] $end
$var wire 8 q d3 [7:0] $end
$var wire 2 r s [1:0] $end
$var wire 8 s d2 [7:0] $end
$var wire 8 t d0 [7:0] $end
$var reg 8 u y [7:0] $end
$upscope $end
$scope module memoria_datos $end
$var wire 1 % clk $end
$var wire 12 v ra [11:0] $end
$var wire 8 w wd4 [7:0] $end
$var wire 1 . we4 $end
$var wire 8 x rd1 [7:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 10 y a [9:0] $end
$var wire 1 % clk $end
$var wire 16 z rd [15:0] $end
$upscope $end
$scope module mux_stack $end
$var wire 10 { d0 [9:0] $end
$var wire 10 | y [9:0] $end
$var wire 1 0 s $end
$var wire 10 } d1 [9:0] $end
$upscope $end
$scope module out $end
$var wire 8 ~ d0 [7:0] $end
$var wire 8 !" d1 [7:0] $end
$var wire 8 "" d2 [7:0] $end
$var wire 8 #" d3 [7:0] $end
$var wire 2 $" s [1:0] $end
$var reg 8 %" y [7:0] $end
$upscope $end
$scope module pila $end
$var wire 1 % clk $end
$var wire 10 &" push [9:0] $end
$var wire 1 ( reset $end
$var wire 1 5 pushsignal $end
$var wire 1 6 popsignal $end
$var reg 10 '" pop [9:0] $end
$var reg 3 (" stack_pointer [2:0] $end
$upscope $end
$scope module reg1_out $end
$var wire 1 ? clk $end
$var wire 8 )" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 *" q [7:0] $end
$upscope $end
$scope module reg2_out $end
$var wire 1 @ clk $end
$var wire 8 +" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 ," q [7:0] $end
$upscope $end
$scope module reg3_out $end
$var wire 1 A clk $end
$var wire 8 -" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 ." q [7:0] $end
$upscope $end
$scope module reg4_out $end
$var wire 1 B clk $end
$var wire 8 /" d [7:0] $end
$var wire 1 ( reset $end
$var reg 8 0" q [7:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 1" a [9:0] $end
$var wire 10 2" b [9:0] $end
$var wire 10 3" y [9:0] $end
$upscope $end
$scope module unidad_alu $end
$var wire 8 4" a [7:0] $end
$var wire 8 5" b [7:0] $end
$var wire 8 6" y [7:0] $end
$var wire 1 Y zero $end
$var wire 3 7" op_alu [2:0] $end
$var reg 8 8" s [7:0] $end
$upscope $end
$upscope $end
$scope module unidad_control $end
$var wire 16 9" opcode [15:0] $end
$var wire 1 + z $end
$var reg 3 :" op_alu [2:0] $end
$var reg 1 6 pop $end
$var reg 1 5 push $end
$var reg 2 ;" s_in [1:0] $end
$var reg 1 3 s_inc $end
$var reg 2 <" s_inm [1:0] $end
$var reg 2 =" s_out [1:0] $end
$var reg 1 0 s_stack $end
$var reg 1 / we3 $end
$var reg 1 . we4 $end
$var reg 1 - we_out $end
$var reg 1 , wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ="
b11 <"
b0 ;"
b0 :"
b101010 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b1 3"
b0 2"
b1 1"
b0 0"
bx /"
b0 ."
bx -"
b0 ,"
bx +"
b0 *"
bx )"
b0 ("
bx '"
b1 &"
bx %"
bx $"
bz #"
bz ""
b0 !"
b0 ~
bx }
b1 |
b1 {
b1010100000000011 z
b0 y
b0 x
b0 w
b100000000011 v
bx u
b0 t
b0 s
b11 r
bx q
b10000000 p
b1 o
b1 n
b11 m
bx l
b0 k
bz j
bz i
bx h
bx g
b11 f
b0 e
b1 d
b0 c
b0 b
bx a
b11 `
b0 _
b1000 ^
0]
0\
0[
1Z
1Y
bx X
b0 W
b101010 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b11 N
bx M
b0 L
b0 K
b0 J
b1010100000000011 I
b1 H
bx G
bx F
b1 E
bx D
b1 C
0B
0A
0@
0?
bx >
bx =
b0 <
b101010 ;
b0 :
b0 9
b0 8
b0 7
06
05
b0 4
13
b11 2
bx 1
00
1/
0.
0-
0,
0+
bx *
bx )
1(
bx '
bx &
1%
b0 $
b0 #
b0 "
b0 !
$end
#1000
0(
#3000
b1000 G
b1000 a
b1000 u
b1000 X
b1000 l
b1000 q
b1000 &
b1000 )
b1000 =
b1000 g
0%
#6000
b1111 G
b1111 a
b1111 u
1]
0Z
b1 2
b1 N
b1 r
b1 <"
b10 E
b10 d
b10 |
b10 &"
b0 f
b111101 !"
b11110100 v
b1111 p
b100 `
b1111 _
b0 ^
b100000 ;
b100000 V
b100000 9"
b11110100 m
b10 H
b10 n
b10 {
b0 X
b0 l
b0 q
b1000000011110100 I
b1000000011110100 z
b10 C
b10 o
b10 3"
b1 K
b1 e
b1 y
b1 2"
b0 &
b0 )
b0 =
b0 g
1%
#9000
0%
#12000
b101000 F
b101000 %"
b101000 )"
b101000 +"
b101000 -"
b101000 /"
b0 G
b0 a
b0 u
1?
b100 P
b100 b
b100 ~
b100 5"
b1 1
b1 M
b1 $"
b1 ="
1-
b0 2
b0 N
b0 r
b0 <"
0/
b11 E
b11 d
b11 |
b11 &"
b101000 !"
b10100000 v
b1010 p
b0 `
b1010 _
b101100 ;
b101100 V
b101100 9"
b10100000 m
b11 H
b11 n
b11 {
b1011000010100000 I
b1011000010100000 z
b11 C
b11 o
b11 3"
b10 K
b10 e
b10 y
b10 2"
1%
#15000
0%
#18000
b101000 $
b101000 :
b101000 U
b101000 *"
b1111 F
b1111 %"
b1111 )"
b1111 +"
b1111 -"
b1111 /"
0?
0]
1@
1\
b1111 P
b1111 b
b1111 ~
b1111 5"
b0 1
b0 M
b0 $"
b0 ="
b100 E
b100 d
b100 |
b100 &"
b1 f
b10000 !"
b110001000001 v
b11000100 p
b1 `
b100 _
b1100 ^
b101011 ;
b101011 V
b101011 9"
b1000001 m
b100 H
b100 n
b100 {
b1010110001000001 I
b1010110001000001 z
b100 C
b100 o
b100 3"
b11 K
b11 e
b11 y
b11 2"
1%
#21000
0%
#24000
b1111 #
b1111 9
b1111 T
b1111 ,"
0@
1A
0\
1[
b101 E
b101 d
b101 |
b101 &"
b10 f
b110001000010 v
b10 `
b1000010 m
b101 H
b101 n
b101 {
b1010110001000010 I
b1010110001000010 z
b101 C
b101 o
b101 3"
b100 K
b100 e
b100 y
b100 2"
1%
#27000
0%
#30000
b1111 "
b1111 8
b1111 S
b1111 ."
0A
0[
1B
1Z
b110 E
b110 d
b110 |
b110 &"
b11 f
b110001000011 v
b11 `
b1000011 m
b110 H
b110 n
b110 {
b1010110001000011 I
b1010110001000011 z
b110 C
b110 o
b110 3"
b101 K
b101 e
b101 y
b101 2"
1%
#33000
0%
#36000
b1111 !
b1111 7
b1111 R
b1111 0"
b0 F
b0 %"
b0 )"
b0 +"
b0 -"
b0 /"
1?
1]
0B
0Z
b0 P
b0 b
b0 ~
b0 5"
1,
1/
b111 E
b111 d
b111 |
b111 &"
b0 f
b0 !"
b0 v
b0 p
b0 `
b0 _
b0 ^
b0 ;
b0 V
b0 9"
b0 m
b111 H
b111 n
b111 {
b0 I
b0 z
b111 C
b111 o
b111 3"
b110 K
b110 e
b110 y
b110 2"
1%
#39000
0%
#42000
b1000 E
b1000 d
b1000 |
b1000 &"
b1000 H
b1000 n
b1000 {
1+
b1000 C
b1000 o
b1000 3"
b111 K
b111 e
b111 y
b111 2"
1%
#45000
0%
#48000
b1001 E
b1001 d
b1001 |
b1001 &"
b1001 H
b1001 n
b1001 {
b1001 C
b1001 o
b1001 3"
b1000 K
b1000 e
b1000 y
b1000 2"
1%
#51000
0%
#54000
b1010 E
b1010 d
b1010 |
b1010 &"
b1010 H
b1010 n
b1010 {
b1010 C
b1010 o
b1010 3"
b1001 K
b1001 e
b1001 y
b1001 2"
1%
